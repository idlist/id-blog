---
import { getCollection } from 'astro:content'
import { sum } from 'lodash-es'
import { getLangCode, getRoot, useLang } from '@/i18n'
import { ymd, ymKey } from '@/utils/server'

const code = getLangCode(Astro.url)
const root = getRoot(code)
const t = useLang(code)

const posts = await getCollection('posts', (entry) => {
  return entry.id.startsWith(`${code}/`)
})

const stats: Record<number, number> = {}

posts.forEach(({ data }) => {
  const date = ymd(data.date)
  stats[date.year] = stats[date.year] ? stats[date.year] + 1 : 1
})

const hasDate = Object.keys(stats).length
---

<div class="timeline">
  <div class="timeline__title">Timeline</div>
  <div class="timeline__list">
  {
    hasDate ? (
      Object.entries(stats)
        .sort((a, b) => parseInt(b[0]) - parseInt(a[0]))
        .map(([year, count]) => (
          <a class="link-sub timeline__item" href={`${root}timeline/${year}`}>
            <span class="timeline__name">{year}</span>
            <span class="post-count">{count}</span>
          </a>
        ))
    ) : (
      <div class="timeline__no-timeline">{t('ui.no-timeline')}</div>
    )
  }
  </div>
</div>

<style lang="scss">
  .timeline {
    margin: 1rem 0;

    &__title {
      font-size: 1.5rem;
      font-weight: bold;
    }

    &__list {
      display: flex;
      flex-wrap: wrap;
      row-gap: 0.125rem;
      column-gap: 0.75rem;
    }

    &__item {
      display: flex;
      align-items: center;
      column-gap: 0.25rem;
      word-break: break-word;
      text-decoration-color: var(--color-green);
    }

    &__name {
      color: var(--color-green);
    }

    &__no-timeline {
      color: var(--color-gray-light);
    }
  }
</style>
