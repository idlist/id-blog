---
import { getCollection } from 'astro:content'
import { getLangCode, getRoot, useLang } from '@/i18n'
import { tagify } from '@/utils/server'

const code = getLangCode(Astro.url)
const root = getRoot(code)
const t = useLang(code)

const posts = await getCollection('posts', (entry) => {
  return entry.id.startsWith(`${code}/`)
})

const tags: Record<string, number> = {}

posts.forEach(({ data }) => {
  data.tags?.forEach((tag) => {
    tags[tag] = tags[tag] ? tags[tag] + 1 : 1
  })
})

const hasTags = Object.keys(tags).length
---

<div class="tags">
  <div class="tags__title">Tags</div>
  <div class="tags__list">
    {
      hasTags ? (
        Object.entries(tags)
          .sort((a, b) => a[0].localeCompare(b[0]))
          .map(([tag, count]) => (
            <a class="link-sub tags__item" href={`${root}tags/${tagify(tag)}`}>
              <span class="tags__name">{tag}</span>
              <span class="post-count">{count}</span>
            </a>
          ))
      ) : (
        <div class="tags__no-tags">{t('ui.no-tags')}</div>
      )
    }
  </div>
</div>

<style lang="scss">
  .tags {
    margin: 1rem 0;

    &__title {
      margin-bottom: 0.25rem;

      font-size: 1.5rem;
      font-weight: bold;
    }

    &__list {
      display: flex;
      flex-wrap: wrap;
      row-gap: 0.125rem;
      column-gap: 0.75rem;
    }

    &__item {
      display: flex;
      align-items: center;
      column-gap: 0.25rem;
      word-break: break-word;
    }

    &__no-tags {
      color: var(--color-gray-light);
    }
  }
</style>
